(function() {var implementors = {};
implementors["rgsl"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"rgsl/enum.Value.html\" title=\"enum rgsl::Value\">Value</a>&gt; for <a class=\"type\" href=\"rgsl/type.GSLResult.html\" title=\"type rgsl::GSLResult\">GSLResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;","synthetic":false,"types":["rgsl::enums::GSLResult"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.Value.html\" title=\"enum rgsl::Value\">Value</a>","synthetic":false,"types":["rgsl::enums::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.EigenSort.html\" title=\"enum rgsl::EigenSort\">EigenSort</a>","synthetic":false,"types":["rgsl::enums::EigenSort"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.FftDirection.html\" title=\"enum rgsl::FftDirection\">FftDirection</a>","synthetic":false,"types":["rgsl::enums::FftDirection"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.GaussKonrodRule.html\" title=\"enum rgsl::GaussKonrodRule\">GaussKonrodRule</a>","synthetic":false,"types":["rgsl::enums::GaussKonrodRule"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.IntegrationQawo.html\" title=\"enum rgsl::IntegrationQawo\">IntegrationQawo</a>","synthetic":false,"types":["rgsl::enums::IntegrationQawo"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.VegasMode.html\" title=\"enum rgsl::VegasMode\">VegasMode</a>","synthetic":false,"types":["rgsl::enums::VegasMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.ODEiv.html\" title=\"enum rgsl::ODEiv\">ODEiv</a>","synthetic":false,"types":["rgsl::enums::ODEiv"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.WaveletDirection.html\" title=\"enum rgsl::WaveletDirection\">WaveletDirection</a>","synthetic":false,"types":["rgsl::enums::WaveletDirection"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"rgsl/enum.SfLegendreNorm.html\" title=\"enum rgsl::SfLegendreNorm\">SfLegendreNorm</a>","synthetic":false,"types":["rgsl::enums::SfLegendreNorm"]}];
implementors["rppal"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/gpio/enum.Error.html\" title=\"enum rppal::gpio::Error\">Error</a>","synthetic":false,"types":["rppal::gpio::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"rppal/system/enum.Error.html\" title=\"enum rppal::system::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/gpio/enum.Error.html\" title=\"enum rppal::gpio::Error\">Error</a>","synthetic":false,"types":["rppal::gpio::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/i2c/enum.Error.html\" title=\"enum rppal::i2c::Error\">Error</a>","synthetic":false,"types":["rppal::i2c::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"rppal/system/enum.Error.html\" title=\"enum rppal::system::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/i2c/enum.Error.html\" title=\"enum rppal::i2c::Error\">Error</a>","synthetic":false,"types":["rppal::i2c::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/pwm/enum.Error.html\" title=\"enum rppal::pwm::Error\">Error</a>","synthetic":false,"types":["rppal::pwm::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/spi/enum.Error.html\" title=\"enum rppal::spi::Error\">Error</a>","synthetic":false,"types":["rppal::spi::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/uart/enum.Error.html\" title=\"enum rppal::uart::Error\">Error</a>","synthetic":false,"types":["rppal::uart::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"rppal/gpio/enum.Error.html\" title=\"enum rppal::gpio::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/uart/enum.Error.html\" title=\"enum rppal::uart::Error\">Error</a>","synthetic":false,"types":["rppal::uart::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"rppal/system/enum.Error.html\" title=\"enum rppal::system::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rppal/uart/enum.Error.html\" title=\"enum rppal::uart::Error\">Error</a>","synthetic":false,"types":["rppal::uart::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()